#!/usr/bin/env bash

#==============================================================================
# DESCRIPTION
#             This environment file sets things that only should exist on coder
#             so as to not clutter up my beautiful MacOS workspace.
#
#==============================================================================

export PATH="$PATH:$HOME/.rvm/bin"
export GOOGLE_APPLICATION_CREDENTIALS=~/.config/gcloud/application_default_credentials.json
export KW_POSTGRES_HOST=shared-psql-postgresql.postgres
export KW_POSTGRES_PORT=5432
export KW_POSTGRES_DATABASE=kw_anthonygarritano
export KW_POSTGRES_USERNAME=postgres
export KW_POSTGRES_PASSWORD=WEC0DDJonVwUDYGq
export RAILS_ENV=coder

# ================================================================================
# =                                 PS1 Settings                                 =
# ================================================================================
# Called when git-prompt.sh is done running
function set_ps1() {
  export PS1="${DARK_PURPLE}╭ ${PURPLE}\u${NC}@${GREEN}\h:${YELLOW}\w${ORANGE}\$(__git_ps1) ${NC}\n${DARK_PURPLE}╰${NC} \$ "
}
export -f set_ps1

debug "Creating .coder.profile"
# Create a .coder.profile file which will be sourced into coder's .bashrc file
cat <<EOF > /home/coder/.coder.profile
#!/bin/bash

# Purpose:
#		This file literally only exists so that coder will load the proper bash_profile
#		It's disgusting, and I hate it. But here we are. This happens because coder does
#		Some "clever" stuff to load a web terminal and we don't use a real SSH client.

source /home/coder/.bash_profile
EOF

debug "Checking if .bashrc should be modified"
# If we haven't yet done it, append a source-command to the bashrc file so that
# we'll be sure to source the .coder.profile above for all subsequent modifications.
numLinesSourcingProfile=$(cat "${HOME}/.bashrc" | grep -c .coder.profile || [[ $? == 1 ]] )
debug "Found ${numLinesSourcingProfile}"
if [[ "${numLinesSourcingProfile}" == "0" ]]; then
  debug "Adding .coder.profile sourcing to .bashrc file"
cat <<EOF >> "$DOTFILES_LOCATION/home/.bashrc"
[[ -s "${HOME}/.coder.profile" ]] && source "${HOME}/.coder.profile"
EOF
fi

debug "Sourcing rvm script"
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
